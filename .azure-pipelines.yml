# Azure Pipelines for Boost.GIL
#
# Copyright 2018-2019 Mateusz Loskot <mateusz at loskot dot net>
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://boost.org/LICENSE_1_0.txt)
#
variables:
  system.debug: true
  configuration: release

trigger:
  - master
  - develop
  - azure-pipelines
  - ml/*

jobs:
  - job: 'ubuntu1604_gcc5_cxx11_cmake'
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - script: which g++ && g++ --version
        displayName: 'Check GCC'
      - template: .ci/azure-pipelines/steps-check-cmake.yml
      - script: |
          sudo -E apt-get update
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install libpng-dev libjpeg-dev libtiff5-dev libraw-dev
        displayName: 'Install dependencies'
      - template: .ci/azure-pipelines/steps-install-boost.yml
      - template: .ci/azure-pipelines/steps-cmake-build-and-test.yml

  - job: 'ubuntu1604_gcc8_cxx14_cmake'
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - template: .ci/azure-pipelines/steps-install-gcc.yml
      - script: which g++ && g++ --version
        displayName: 'Check GCC'
      - template: .ci/azure-pipelines/steps-check-cmake.yml
      - script: |
          sudo -E apt-get update
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install libpng-dev libjpeg-dev libtiff5-dev libraw-dev
        displayName: 'Install dependencies'
      - template: .ci/azure-pipelines/steps-install-boost.yml
      - template: .ci/azure-pipelines/steps-cmake-build-and-test.yml
        parameters:
          cxxver: '14'

  - job: 'win2016_vs2017_cxx14_cmake'
    pool:
      vmImage: 'vs2017-win2016'
    steps:
      - task: UsePythonVersion@0
        displayName: 'Setup Python'
        inputs:
          versionSpec: '3.6'
          addToPath: true
          architecture: 'x64'
      - template: .ci/azure-pipelines/steps-check-cmake.yml
      - template: .ci/azure-pipelines/steps-install-conan.yml
      - template: .ci/azure-pipelines/steps-install-boost.yml
      - template: .ci/azure-pipelines/steps-cmake-build-and-test.yml
        parameters:
          get_findboost: 'ON'
          use_conan: 'ON'

  - job: 'win2016_vs2017_cxx17_cmake'
    pool:
      vmImage: 'vs2017-win2016'
    steps:
      - task: UsePythonVersion@0
        displayName: 'Setup Python'
        inputs:
          versionSpec: '3.6'
          addToPath: true
          architecture: 'x64'
      - template: .ci/azure-pipelines/steps-check-cmake.yml
      - template: .ci/azure-pipelines/steps-install-conan.yml
      - template: .ci/azure-pipelines/steps-install-boost.yml
      - template: .ci/azure-pipelines/steps-cmake-build-and-test.yml
        parameters:
          cxxver: '17'
          get_findboost: 'ON'
          use_conan: 'ON'

  - job: 'win2012_vs2015_cmake'
    pool:
      vmImage: 'vs2015-win2012r2'
    steps:
      - powershell: |
          Invoke-WebRequest https://cmake.org/files/v3.14/cmake-3.14.4-win64-x64.zip -OutFile C:\cmake-3.14.4-win64-x64.zip
          Expand-Archive C:\cmake-3.14.4-win64-x64.zip -DestinationPath C:\
          Rename-Item -Path C:\cmake-3.14.4-win64-x64 -NewName C:\cmake
          Write-Host "##vso[task.prependpath]C:\cmake\bin"
        displayName: 'Install CMake 3.14'
      - template: .ci/azure-pipelines/steps-check-cmake.yml
      - powershell: |
          Invoke-WebRequest https://www.python.org/ftp/python/3.7.1/python-3.7.1-amd64-webinstall.exe -OutFile C:\py3-setup.exe
          C:\py3-setup.exe /quiet PrependPath=1 InstallAllUsers=1 Include_launcher=1 InstallLauncherAllUsers=1 Include_test=0 Include_doc=0 Include_dev=0 Include_debug=0 Include_tcltk=0 TargetDir=C:\Python37 | Out-Null
          Write-Host "##vso[task.prependpath]C:\Python37"
          Write-Host "##vso[task.prependpath]C:\Python37\Scripts"
        displayName: 'Install Python 3.7'
      - template: .ci/azure-pipelines/steps-install-conan.yml
        parameters:
          python: C:\Python37\python.exe
      - template: .ci/azure-pipelines/steps-install-boost.yml
      - template: .ci/azure-pipelines/steps-cmake-build-and-test.yml
        parameters:
          get_findboost: 'ON'
          use_conan: 'ON'

  - job: 'macos1013_xcode91_cmake'
    pool:
      vmImage: 'macOS-10.13'
    steps:
      - script: which clang++ && clang++ --version
        displayName: 'Check clang'
      - template: .ci/azure-pipelines/steps-check-cmake.yml
      - template: .ci/azure-pipelines/steps-install-conan.yml
        parameters:
          python: python3
      - template: .ci/azure-pipelines/steps-install-boost.yml
        parameters:
          toolset: darwin
      - template: .ci/azure-pipelines/steps-cmake-build-and-test.yml
        parameters:
          use_conan: 'ON'

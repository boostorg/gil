# Azure Pipelines for Boost.GIL
#
# Copyright 2018-2019 Mateusz Loskot <mateusz at loskot dot net>
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://boost.org/LICENSE_1_0.txt)
#
parameters:
  # defaults, if not specified
  configuration: 'Release'
  cxxver: '11'
  get_findboost: 'ON'
  enable_ext_io: 'OFF'
  enable_ext_numeric: 'ON'
  enable_ext_toolbox: 'ON'
  use_conan: 'OFF'

steps:
  - script: |
      export BOOST_ROOT=/usr/local/share/boost/1.69.0
      export BOOST_INCLUDEDIR=$BOOST_ROOT/include
      export BOOST_LIBRARYDIR=$BOOST_ROOT/lib

      cmake -H. -B_build -DCMAKE_BUILD_TYPE=${{ parameters.configuration }} -DCMAKE_CXX_STANDARD=${{ parameters.cxxver }} -DCMAKE_VERBOSE_MAKEFILE=ON -DBoost_DEBUG=ON -DBoost_ARCHITECTURE=-x64 -DGIL_DOWNLOAD_FINDBOOST=${{ parameters.get_findboost }} -DGIL_USE_CONAN=ON -DGIL_ENABLE_EXT_IO=${{ parameters.enable_ext_io }} -DGIL_ENABLE_EXT_NUMERIC=${{ parameters.enable_ext_numeric }} -DGIL_ENABLE_EXT_TOOLBOX=${{ parameters.enable_ext_toolbox }}
    condition: ne(variables['Agent.OS'], 'Windows_NT')
    displayName: 'Run CMake to configure build'

  - script: |
      set BOOST_ROOT="C:\Program Files\Boost\1.69.0"
      set BOOST_INCLUDEDIR=%BOOST_ROOT%\include
      set BOOST_LIBRARYDIR=%BOOST_ROOT%\lib

      cmake -H. -B_build -A x64 -DCMAKE_BUILD_TYPE=${{ parameters.configuration }} -DCMAKE_CXX_STANDARD=${{ parameters.cxxver }} -DCMAKE_VERBOSE_MAKEFILE=ON -DBoost_DEBUG=ON -DBoost_ARCHITECTURE=-x64 -DGIL_DOWNLOAD_FINDBOOST=${{ parameters.get_findboost }} -DGIL_USE_CONAN=ON -DGIL_ENABLE_EXT_IO=${{ parameters.enable_ext_io }} -DGIL_ENABLE_EXT_NUMERIC=${{ parameters.enable_ext_numeric }} -DGIL_ENABLE_EXT_TOOLBOX=${{ parameters.enable_ext_toolbox }}
    condition: eq(variables['Agent.OS'], 'Windows_NT')
    displayName: 'Run CMake to configure build'

  - script: cmake --build _build --config ${{ parameters.configuration }} -j 4
    displayName: 'Run CMake to build'

  - script: cd _build && ctest --build-config ${{ parameters.configuration }} -VV --output-on-failure
    displayName: 'Run CTest to test'

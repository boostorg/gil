name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - develop
      - feature/**

env:
  LIBRARY: gil
  UBSAN_OPTIONS: print_stacktrace=1

jobs:
  posix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - toolset: gcc-6
            cxxstd: "11,14,1z"
            os: ubuntu-16.04
            install: g++-6
          - toolset: gcc-7
            cxxstd: "11,14,17"
            os: ubuntu-18.04
          - toolset: gcc
            compiler: g++-8
            cxxstd: "11,14,17,2a"
            os: ubuntu-18.04
            install: g++-8
          - toolset: gcc-9
            cxxstd: "11,14,17,2a"
            os: ubuntu-18.04
          - toolset: gcc-10
            cxxstd: "11,14,17,2a"
            os: ubuntu-18.04
          - toolset: clang
            compiler: clang++-3.5
            cxxstd: "11,14"
            define: "_GLIBCXX_USE_CXX11_ABI=0"
            os: ubuntu-16.04
            install: clang-3.5
          - toolset: clang
            compiler: clang++-3.6
            cxxstd: "11,14"
            define: "_GLIBCXX_USE_CXX11_ABI=0"
            os: ubuntu-16.04
            install: clang-3.6
          - toolset: clang
            compiler: clang++-3.7
            cxxstd: "11,14"
            define: "_GLIBCXX_USE_CXX11_ABI=0"
            os: ubuntu-16.04
            install: clang-3.7
          - toolset: clang
            compiler: clang++-3.8
            cxxstd: "11,14"
            os: ubuntu-16.04
            install: clang-3.8
          - toolset: clang
            compiler: clang++-3.9
            cxxstd: "11,14"
            os: ubuntu-16.04
            install: clang-3.9
          - toolset: clang
            compiler: clang++-4.0
            cxxstd: "11,14"
            os: ubuntu-16.04
            install: clang-4.0
          - toolset: clang
            compiler: clang++-5.0
            cxxstd: "11,14,1z"
            os: ubuntu-16.04
            install: clang-5.0
          - toolset: clang
            compiler: clang++-6.0
            cxxstd: "11,14,17"
            os: ubuntu-18.04
            install: clang-6.0
          - toolset: clang
            compiler: clang++-7
            cxxstd: "11,14,17"
            os: ubuntu-18.04
            install: clang-7
          - toolset: clang
            compiler: clang++-8
            cxxstd: "11,14,17,2a"
            os: ubuntu-20.04
            install: clang-8
          - toolset: clang
            compiler: clang++-9
            cxxstd: "11,14,17,2a"
            os: ubuntu-20.04
          - toolset: clang
            compiler: clang++-10
            cxxstd: "11,14,17,2a"
            os: ubuntu-20.04
          - toolset: clang
            cxxstd: "11,14,17,2a"
            os: macos-10.15

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v2

      - name: Install packages
        if: matrix.install
        run: sudo apt install ${{matrix.install}}

      - name: Setup Boost
        run: |
          REF=${GITHUB_BASE_REF:-$GITHUB_REF}
          BOOST_BRANCH=develop && [ "$REF" == "master" ] && BOOST_BRANCH=master || true
          cd ..
          git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          cp -r $GITHUB_WORKSPACE/* libs/$LIBRARY
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs 3" $LIBRARY
          ./bootstrap.sh
          ./b2 -d0 headers

      - name: Create user-config.jam
        if: matrix.compiler
        run: |
          echo "using ${{matrix.toolset}} : : ${{matrix.compiler}} ;" > ~/user-config.jam
          cat ~/user-config.jam

      - name: Run tests
        if: "!matrix.define"
        run: |
          cd ../boost-root
          ./b2 -j3 libs/$LIBRARY/test toolset=${{matrix.toolset}} cxxstd=${{matrix.cxxstd}} variant=debug,release

      - name: Run tests
        if: matrix.define
        run: |
          cd ../boost-root
          ./b2 -j3 libs/$LIBRARY/test toolset=${{matrix.toolset}} cxxstd=${{matrix.cxxstd}} define=${{matrix.define}} variant=debug,release

  windows:
    strategy:
      fail-fast: false
      matrix:
        include:
          - toolset: msvc-14.1
            cxxstd: "14,17,latest"
            addrmd: 32,64
            os: windows-2016
          - toolset: msvc-14.2
            cxxstd: "14,17,latest"
            addrmd: 32,64
            os: windows-2019
          - toolset: gcc
            cxxstd: "11,14,17,2a"
            addrmd: 64
            os: windows-2019

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Boost
        shell: cmd
        run: |
          if "%GITHUB_BASE_REF%" == "" set GITHUB_BASE_REF=%GITHUB_REF%
          set BOOST_BRANCH=develop
          if "%GITHUB_BASE_REF%" == "master" set BOOST_BRANCH=master
          cd ..
          git clone -b %BOOST_BRANCH% --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          xcopy /s /e /q %GITHUB_WORKSPACE% libs\%LIBRARY%\
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs 3" %LIBRARY%
          cmd /c bootstrap
          b2 -d0 headers

      - name: Run tests
        if: startsWith(matrix.toolset, 'msvc')
        shell: cmd
        run: |
          cd ../boost-root
          b2 -j3 --abbreviate-paths libs/%LIBRARY%/test toolset=${{matrix.toolset}} cxxstd=${{matrix.cxxstd}} address-model=${{matrix.addrmd}} variant=debug,release
      - name: Run tests
        if: startsWith(matrix.toolset, 'gcc')
        shell: cmd
        run: |
          cd ../boost-root
          b2 -j3 --abbreviate-paths libs/%LIBRARY%/test toolset=${{matrix.toolset}} cxxstd=${{matrix.cxxstd}} address-model=${{matrix.addrmd}} cxxflags=-mbig-obj variant=debug,release
